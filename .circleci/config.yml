version: 2.1
jobs:
  build:

    # Specify the Xcode version to use
    macos:
      xcode: "10.2.1"

    steps:
      - run:
          name: update-brew
          command: 'brew update'
      - run:
          name: upgrade-node
          command: 'brew upgrade node'
      - run:
          name: install-cask
          command: 'brew tap caskroom/cask'
      - run:
          name: install-android-sdk
          command: 'brew cask install android-sdk'
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: node-version
          command: 'node --version'
      - run:
          name: npm-version
          command: 'npm --version'
      - checkout

      - run:
          name: list directory
          command: 'ls'
      - run:
          name: npm-i
          command: 'sudo npm i --unsafe-perm'
      - run:
          name: npm-lint
          command: 'sudo npm run lint'
      - run:
          name: npm install ionic
          command: 'sudo npm i -g ionic'
      - run:
          name: ionic build
          command: 'ionic build'
      - run:
          name: Add android
          command: 'sudo npx cap add android'
      - run:
          name: chmod working directory
          command: 'sudo chmod -R 777 /Users/distiller/project'
      - run:
          name: chown working directory
          command: 'sudo chown -R $USER /Users/distiller/project'
      - run:
          name: Add ios
          command: 'npx cap add ios'
      - run:
          name: list directory
          command: 'ls -alt ios'
      #- run:
      #    name: Add electron
      #    command: 'sudo npx cap add electron'
      - run:
          name: Copy
          command: 'sudo npx cap copy'

      # Install CocoaPods
      - run:
          name: Install CocoaPods
          command: 'sudo gem install cocoapods'
      - run:
          name: Update cocoapods repositories
          command: 'pod repo update'
      - run:
          name: java version
          command: 'java -version'
      - run:
          name: install gradle
          command: 'brew install gradle'
      - run:
          name: print working directory
          working_directory: '~/'
          command: 'pwd'
      - run:
          name: cd android
          command: 'cd android/'
      - run:
          name: list directory
          command: 'ls -alt /Users/distiller/project/android'
      - run:
          name: sdk location
          working_directory: '/Users/distiller/project/android'
          command: 'sed -i "" "s:/Users/jcesarmobile/Library/Android/sdk:/usr/local/share/android-sdk:g" local.properties'
      - run:
          name: cat properties
          command: 'cat /Users/distiller/project/android/local.properties'
      - run:
          name: echo ANDROID_SDK_ROOT
          command: 'echo $ANDROID_SDK_ROOT'
      - run:
          name: set ANDROID_SDK_ROOT
          command: 'export ANDROID_SDK_ROOT="/usr/local/share/android-sdk"'
      - run:
          name: echo ANDROID_SDK_ROOT 2
          command: 'echo $ANDROID_SDK_ROOT'
      - run:
          name: echo ANDROID_HOME
          command: 'echo $ANDROID_HOME'
      - run:
          name: echo ANDROID_HOME 2
          command: 'echo $ANDROID_HOME'
      - run:
          name: list directory
          command: 'ls -alt /Users/distiller/project/android'
      - run:
          name: accept licenses
          command: '(echo y; echo y; echo y; echo y; echo y; echo y) | /usr/local/share/android-sdk/tools/bin/sdkmanager --licenses'
      - run:
          name: install openjdk
          command: 'brew tap AdoptOpenJDK/openjdk'
      - run:
          name: install openjdk2
          command: 'brew cask install adoptopenjdk8'
      - run:
          name: build gradle1
          working_directory: '/Users/distiller/project/android'
          command: './gradlew assembleDebug'
      - run:
          name: build gradle2
          command: 'android/gradlew wrapper'
      - run:
          name: build gradle3
          command: 'android/gradlew init'
      - run:
          name: build gradle4
          command: 'android/gradlew tasks --all'
      - run:
          name: build gradle5
          command: 'android/gradlew build'
      - run:
          name: list directory gradle1
          command: 'ls -alt android'
      - run:
          name: list directory gradle2
          command: 'ls -alt android/app'
      - run:
          name: list directory gradle3
          command: 'ls -alt android/app/build'
      - run:
          name: list directory gradle4
          command: 'ls -alt android/app/build/outputs'
      - run:
          name: list directory gradle5
          command: 'ls -alt android/app/build/outputs/apk'

      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: /tmp/test-results
          destination: scan-test-results
      - store_artifacts:
          path: ~/Library/Logs/scan
          destination: scan-logs